
- name: Check for existing kubelet configuration
  stat:
    path: /etc/kubernetes/kubelet.conf
  register: kubelet_conf

- name: kubeadm init
  command: "kubeadm init --kubernetes-version v1.11.9 --pod-network-cidr=10.244.10.0/16 --apiserver-advertise-address {{ hostvars[groups.master[0]].ansible_ssh_host }}"
  args:
    creates: /etc/kubernetes/kubelet.conf
  when: kubelet_conf.stat.exists == False

- name: add ports range
  lineinfile:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    line: "    - --service-node-port-range={{ EPM_PORT_FROM }}-{{ EPM_PORT_TO }}"
    insertafter: "    - kube-apiserver"

- name: In case of upgrade make sure container versions are right for kube-apiserver
  replace:
    path: /etc/kubernetes/manifests/kube-apiserver.yaml
    regexp: v1.[0-9]{1,2}.[0-9]{1,2}
    replace: v1.11.9

- name: In case of upgrade make sure container versions are right for kube-controller-manager
  replace:
    path: /etc/kubernetes/manifests/kube-controller-manager.yaml
    regexp: v1.[0-9]{1,2}.[0-9]{1,2}
    replace: v1.11.9

- name: In case of upgrade make sure container versions are right for kube-scheduler
  replace:
    path: /etc/kubernetes/manifests/kube-scheduler.yaml
    regexp: v1.[0-9]{1,2}.[0-9]{1,2}
    replace: v1.11.9

- name: Ensure kubectl configuration directory is present
  become: True
  file:
    path: /home/ubuntu/.kube
    state: directory
    owner: ubuntu
    group: ubuntu
    mode: 0700

- name: Copy kubectl configuration for the default user
  become: True
  copy:
    remote_src: True
    src: /etc/kubernetes/admin.conf
    dest: /home/ubuntu/.kube/config
    owner: ubuntu
    group: ubuntu
    mode: 0777

- name: Change ownership
  file:
    path: /home/ubuntu/.kube/config
    owner: ubuntu
    group: ubuntu

- name: kubectl apply fannnel
  become: True
  become_user: ubuntu
  command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

- name: generate a join token
  command: kubeadm token create --print-join-command
  register: joincommand

- name: set fact joincommand
  set_fact:
    joincommand: "{{ joincommand.stdout }}"


- name: Check for existing kubectl bash completion
  stat:
    path: /etc/bash_completion.d/kubectl
  register: kubectl_bash_completion

- name: Ensure kubectl bash_completion is present
  become: True
  shell: kubectl completion bash > /etc/bash_completion.d/kubectl
  when: kubectl_bash_completion.stat.exists == False


  